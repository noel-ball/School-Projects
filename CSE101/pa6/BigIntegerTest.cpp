//-----------------------------------------------------------------------------
// Noel Ball njball pa6
// BigIntegerTest.cpp
// Testing Harness for BigInteger ADT
//-----------------------------------------------------------------------------

#include<iostream>
#include"BigInteger.h"

using namespace std;

int main(){

    string s1 = "91287346670000043892345634563400005619187236478";
    //string s2 = "-330293847502398475";
    string s3 = "9876545439000000345634560000000002000034565430000000006543654365346534";
    //string s4 = "9876545439000000000000000100000000000006543654365346534";
    string s5 = "98765454390000034563456191872363456345619187236000456456345756780000065436543";
    //string s6 = "9876545439000000000000000000000000000006543";

    //BigInteger N;
    BigInteger A = BigInteger(s1);
    BigInteger B = BigInteger(s3);
    BigInteger C = BigInteger(s5);

    cout << endl;

    cout << "A = " << A << endl;
    cout << "B = " << B << endl;
    cout << "C = " << C << endl;
    cout << "(A==B) = " << ((A==B)?"True":"False") << endl;
    cout << "(A<B)  = " << ((A<B)? "True":"False") << endl;
    cout << "(A<=B) = " << ((A<=B)?"True":"False") << endl;
    cout << "(A>B)  = " << ((A>B)? "True":"False") << endl;
    cout << "(A>=B) = " << ((A>=B)?"True":"False") << endl << endl;

    BigInteger D = A+B;
    BigInteger E = B+A;
    BigInteger F = D-E;
    cout << "D = " << D << endl;
    cout << "E = " << E << endl;
    cout << "(D==E)  = " << ((D==E)?"True":"False") << endl;
    cout << "F:(D-F) = " << F << endl << endl;

    cout << "Past add/sub!" << endl << endl;

    string t1 = "-0041085449";
    string t2 = "-7402779357";
    BigInteger X = BigInteger(t1);
    cout << "X = " << X << ", signum = " << X.sign() << endl;
    BigInteger Y = BigInteger(t2);
    cout << "Y = " << Y << ", signum = " << Y.sign() << endl;
    BigInteger Z = X - Y;
    cout << "(X<Y)   = " << ((X<Y)?"True":"False") << endl;
    cout << "(X>Y)   = " << ((X>Y)?"True":"False") << endl;
    cout << "(X==Y)  = " << ((X==Y)?"True":"False") << endl;
    cout << "Z:(X-Y) = " << Z << ", signum = " << Z.sign() << endl << endl;
    BigInteger G = A+B+C;
    cout << "G = " << G << endl;
    BigInteger H = A*B;
    cout << "H = " << H << endl;
    BigInteger I = B*A;
    cout << "I = " << I << endl;
    BigInteger J = G*H*I;
    cout << "(H==I) = " << ((H==I)?"True":"False") << endl;
    cout << "J = " << J << endl << endl;
    cout << "Past scary mults!" << endl << endl;

    A += B;
    B -= C;
    C *= J;
    cout << "A = " << A << endl;
    cout << "B = " << B << endl;
    cout << "C = " << C << endl << endl;
    cout << "Past overrides!" << endl << endl;
    cout << "Testing size limit:" << endl;

    cout << A*B*C*D*E*G*H*I*J << endl << endl;
    cout << "Expected:" << endl << "-4863298680264705204909179987662748265661218999725410212711117863180656726250580397748312461693469556971374969538756095110865580953270793786397529073486778038854287935897853118391626233568354278774839148410175041827958900649115528578117496321855090208383577385397983918713140071807589209066997120795458738285578267448075939566364996467599167106059173704567068440730607754711280254966419934753471863527482317738044237215452030614494202780454158301797425492864751423635905936194257628149695960697084535059334494038802570732563311883568920606671778828017631880976990722065315559018445882539200823806745976975511854311784718717278950712982208586141091712764715572567694156678748081583865421346062285906020734470755228255464023209855259872310622694392178215545762031706323707732024719261670099414853742994963146891271670573168215359016268313592566373117833560451865474990420118270608400942480184330585019823668888550160178786130351892125135255998643002031890069890166331624420780215321973700482775259352496043447168760606738617510786920270525031187440163548867321923546609842752514053880565142339051019147454510450413765037449612226907448704085495056283121979402033750078124255524718297160704102770038039857584476579372917046201176428955109285578234060591398324468283476153305440568212025590013505172154646528000" << endl;

    cout << endl;
    return EXIT_SUCCESS;
}
